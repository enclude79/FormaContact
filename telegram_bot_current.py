#!/usr/bin/env python
# -*- coding: utf-8 -*-

import logging
import os
import sys
import traceback
from datetime import datetime
from dotenv import load_dotenv
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackQueryHandler, ContextTypes
import re

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
logs_dir = '/home/enclude/FormaContact/logs'
os.makedirs(logs_dir, exist_ok=True)

# –£–ª—É—á—à–µ–Ω–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(f'{logs_dir}/bot.log', encoding='utf-8'),
        logging.FileHandler(f'{logs_dir}/bot_errors.log', encoding='utf-8'),
        logging.StreamHandler(sys.stdout)
    ]
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞ –¥–ª—è –æ—à–∏–±–æ–∫
error_logger = logging.getLogger('errors')
error_handler = logging.FileHandler(f'{logs_dir}/bot_errors.log', encoding='utf-8')
error_handler.setLevel(logging.ERROR)
error_formatter = logging.Formatter('%(asctime)s - ERROR - %(message)s')
error_handler.setFormatter(error_formatter)
error_logger.addHandler(error_handler)

logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv('BOT_TOKEN')
ADMIN_CHAT_ID = os.getenv('ADMIN_CHAT_ID')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if not BOT_TOKEN:
    logger.error("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    raise ValueError("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}
admin_chat_ids = set()  # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤

async def error_handler_func(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    error_msg = f"Exception while handling an update: {context.error}"
    logger.error(error_msg)
    error_logger.error(f"{error_msg}\nUpdate: {update}\nTraceback: {traceback.format_exc()}")
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å update –∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if update and hasattr(update, 'effective_message') and update.effective_message:
        try:
            await update.effective_message.reply_text(
                "üÜò –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —É–∂–µ —É–≤–µ–¥–æ–º–ª–µ–Ω—ã. üÜò"
            )
        except Exception:
            pass

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id
    user_info = f"@{update.effective_user.username or 'no_username'} ({update.effective_user.first_name})"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã deep linking
    start_param = None
    if context.args:
        start_param = context.args[0]
        logger.info(f"üîó Deep link –ø–∞—Ä–∞–º–µ—Ç—Ä: {start_param}")
    
    logger.info(f"üöÄ –ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} ({user_info}), Chat ID: {chat_id}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤
    admin_chat_ids.add(chat_id)
    
    # –õ–æ–≥–∏—Ä—É–µ–º Chat ID –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—Ç–æ–ª—å–∫–æ –≤ –ª–æ–≥–∏)
    logger.info(f"üìù Chat ID –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {chat_id}")
    
    user_data[user_id] = {}
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—à–µ–ª –ø–æ —Å—Å—ã–ª–∫–µ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º, —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∑–∞—è–≤–∫–∏
    if start_param in ['form', 'request', 'application']:
        user_data[user_id] = {'step': 'waiting_name'}
        try:
            await update.message.reply_text(
                "üåü *–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨! –î–ê–í–ê–ô–¢–ï –û–§–û–†–ú–ò–ú –ó–ê–Ø–í–ö–£!* üåü\n\n"
                "‚ú® –î–ª—è –Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:\n"
                "üí´ –ú—ã —Ö–æ—Ç–∏–º –∑–Ω–∞—Ç—å, –∫–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è! üí´",
                parse_mode='Markdown'
            )
            logger.info(f"‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —Ñ–æ—Ä–º—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            return
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Ñ–æ—Ä–º—ã: {e}")
    
    keyboard = [
        [InlineKeyboardButton("üåü –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É üåü", callback_data='new_request')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    welcome_text = """
üéâ *–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –ú–ò–† –ù–ï–î–í–ò–ñ–ò–ú–û–°–¢–ò!* üéâ

üè°‚ú® –í–∞—à –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –∞–Ω–∞–ª–∏–∑—É –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –∂–¥–µ—Ç –≤–∞—Å! ‚ú®üè°

üåà –ß—Ç–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º:
üî• –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
üíé –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è  
üöÄ –ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞
üéØ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥

üí´ –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤ –º–∏—Ä –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏? üí´
–ñ–º–∏—Ç–µ —è—Ä–∫—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ! üëá‚ú®
    """
    
    try:
        await update.message.reply_text(
            welcome_text,
            parse_mode='Markdown',
            reply_markup=reply_markup
        )
        logger.info(f"‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: {e}")

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    user_info = f"@{query.from_user.username or 'no_username'} ({query.from_user.first_name})"
    
    logger.info(f"üîò –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '{query.data}' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id} ({user_info})")
    
    if query.data == 'new_request':
        user_data[user_id] = {'step': 'waiting_name'}
        try:
            await query.edit_message_text(
                "üåü *–ö–ê–ö –í–ê–° –ó–û–í–£–¢?* üåü\n\n"
                "‚ú® –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –∏–º—è:\n"
                "üí´ –ú—ã —Ö–æ—Ç–∏–º –∑–Ω–∞—Ç—å, –∫–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è! üí´",
                parse_mode='Markdown'
            )
            logger.info(f"‚úÖ –ó–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –∏–º–µ–Ω–∏: {e}")

async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id
    message_text = update.message.text
    user_info = f"@{update.effective_user.username or 'no_username'} ({update.effective_user.first_name})"
    
    logger.info(f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id} ({user_info}): '{message_text[:100]}...'")
    
    # –î–æ–±–∞–≤–ª—è–µ–º Chat ID –≤ —Å–ø–∏—Å–æ–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤
    admin_chat_ids.add(chat_id)
    
    if user_id not in user_data:
        try:
            await update.message.reply_text(
                "üåà –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å –∫–æ–º–∞–Ω–¥—ã /start! üåà\n‚ú® –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –∂–¥–µ—Ç! ‚ú®"
            )
            logger.info(f"‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å—Ç–∞—Ä—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å—Ç–∞—Ä—Ç–∞: {e}")
        return
    
    current_step = user_data[user_id].get('step')
    
    if current_step == 'waiting_name':
        # –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–º–µ–Ω–∏
        if len(message_text.strip()) < 2:
            try:
                await update.message.reply_text(
                    "üé≠ –£–ø—Å! –ò–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–ª–∏–Ω–Ω–µ–µ! üé≠\n"
                    "‚ú® –í–≤–µ–¥–∏—Ç–µ –∏–º—è –º–∏–Ω–∏–º—É–º –∏–∑ 2 —Å–∏–º–≤–æ–ª–æ–≤ ‚ú®\n"
                    "üí´ –ú—ã –≤–µ—Ä–∏–º –≤ –≤–∞—Å! üí´"
                )
                logger.warning(f"‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: '{message_text}'")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –∏–º–µ–Ω–∏: {e}")
            return
        
        user_data[user_id]['name'] = message_text.strip()
        user_data[user_id]['step'] = 'waiting_phone'
        
        logger.info(f"‚úÖ –ò–º—è –ø–æ–ª—É—á–µ–Ω–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: '{message_text.strip()}'")
        
        try:
            await update.message.reply_text(
                "üéØ *–û–¢–õ–ò–ß–ù–û! –¢–ï–ü–ï–†–¨ –¢–ï–õ–ï–§–û–ù!* üéØ\n\n"
                "üì± –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏:\n\n"
                "üá∑üá∫ *–†–æ—Å—Å–∏–π—Å–∫–∏–µ –Ω–æ–º–µ—Ä–∞:*\n"
                "üåü +7 916 123 45 67\n"
                "üåü 8 (916) 123-45-67\n"
                "üåü 79161234567\n"
                "üåü 9161234567\n\n"
                "üåç *–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –Ω–æ–º–µ—Ä–∞:*\n"
                "üî• +380 67 123 45 67 (–£–∫—Ä–∞–∏–Ω–∞)\n"
                "üî• +1 555 123 4567 (–°–®–ê/–ö–∞–Ω–∞–¥–∞)\n"
                "üî• +49 30 12345678 (–ì–µ—Ä–º–∞–Ω–∏—è)\n"
                "üî• +33 1 42 86 83 26 (–§—Ä–∞–Ω—Ü–∏—è)\n"
                "üî• +86 138 0013 8000 (–ö–∏—Ç–∞–π)\n"
                "üî• +44 20 7946 0958 (–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è)",
                parse_mode='Markdown'
            )
            logger.info(f"‚úÖ –ó–∞–ø—Ä–æ—Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {e}")
    
    elif current_step == 'waiting_phone':
        # –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        phone = clean_phone(message_text)
        if not is_valid_phone(phone):
            try:
                await update.message.reply_text(
                    "üö® –£–ü–°! –ß–¢–û-–¢–û –ü–û–®–õ–û –ù–ï –¢–ê–ö! üö®\n\n"
                    "üí° *–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –Ω–æ–º–µ—Ä—É:*\n"
                    "üéØ –û—Ç 7 –¥–æ 15 —Ü–∏—Ñ—Ä\n"
                    "üéØ –¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –∏ —Å–∏–º–≤–æ–ª +\n"
                    "üéØ –†–æ—Å—Å–∏–π—Å–∫–∏–µ –∏–ª–∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –Ω–æ–º–µ—Ä–∞\n\n"
                    "üåü *–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —ç—Ç–∏ —Ñ–æ—Ä–º–∞—Ç—ã:*\n"
                    "üá∑üá∫ *–†–æ—Å—Å–∏—è:*\n"
                    "üí´ +7 916 123 45 67\n"
                    "üí´ 8 (916) 123-45-67\n"
                    "üí´ 79161234567\n\n"
                    "üåç *–ú–∏—Ä:*\n"
                    "üî• +380 67 123 45 67 (–£–∫—Ä–∞–∏–Ω–∞)\n"
                    "üî• +1 555 123 4567 (–°–®–ê)\n"
                    "üî• +49 30 12345678 (–ì–µ—Ä–º–∞–Ω–∏—è)\n"
                    "üî• +86 138 0013 8000 (–ö–∏—Ç–∞–π)\n\n"
                    "üí™ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑! –£ –≤–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è! üí™"
                )
                logger.warning(f"‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: '{message_text}'")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {e}")
            return
        
        user_data[user_id]['phone'] = format_phone(phone)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞—è–≤–∫—É
        name = user_data[user_id]['name']
        phone_formatted = user_data[user_id]['phone']
        username = update.effective_user.username
        user_full_name = f"{update.effective_user.first_name or ''} {update.effective_user.last_name or ''}".strip()
        
        logger.info(f"üìã –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç {user_id}: –ò–º—è='{name}', –¢–µ–ª–µ—Ñ–æ–Ω='{phone_formatted}'")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        admin_message = f"""üéä –ù–û–í–ê–Ø –ì–û–†–Ø–ß–ê–Ø –ó–ê–Ø–í–ö–ê! üéä

üåü –ò–º—è: {name}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: {phone_formatted}
üÜî User ID: {user_id}
üë§ Telegram: @{username or '–Ω–µ —É–∫–∞–∑–∞–Ω'} ({user_full_name})
üó®Ô∏è Chat ID: {chat_id}
‚è∞ –í—Ä–µ–º—è: {update.message.date.strftime('%d.%m.%Y %H:%M:%S')}

üöÄ –ö–ª–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤—É! üöÄ
üíé –î–µ–π—Å—Ç–≤—É–π—Ç–µ –±—ã—Å—Ç—Ä–æ! üíé"""
        
        # –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤—Å–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º –∞–¥–º–∏–Ω–∞–º
        admin_sent = False
        if ADMIN_CHAT_ID and ADMIN_CHAT_ID.isdigit():
            try:
                await context.bot.send_message(
                    chat_id=int(ADMIN_CHAT_ID),
                    text=admin_message
                )
                logger.info(f"‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω—É {ADMIN_CHAT_ID}")
                admin_sent = True
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –∞–¥–º–∏–Ω—É {ADMIN_CHAT_ID}: {e}")
        
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω—É, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –∏–∑–≤–µ—Å—Ç–Ω—ã–º —á–∞—Ç–∞–º
        if not admin_sent:
            logger.warning("‚ö†Ô∏è ADMIN_CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤—Å–µ–º –∏–∑–≤–µ—Å—Ç–Ω—ã–º —á–∞—Ç–∞–º")
            for admin_id in admin_chat_ids:
                try:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–∏ –∑–∞—è–≤–∫—É —Å–∞–º–æ–º—É –∑–∞—è–≤–∏—Ç–µ–ª—é
                    if admin_id != chat_id:
                        await context.bot.send_message(
                            chat_id=admin_id,
                            text=admin_message
                        )
                        logger.info(f"‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–º—É –∞–¥–º–∏–Ω—É {admin_id}")
                        admin_sent = True
                    else:
                        # –ï—Å–ª–∏ —ç—Ç–æ —Å–∞–º –∑–∞—è–≤–∏—Ç–µ–ª—å, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ª–æ–≥–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                        logger.warning(f"üìù –ù–ê–°–¢–†–û–ô–ö–ê: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ADMIN_CHAT_ID={admin_id} –≤ .env —Ñ–∞–π–ª–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫")
                except Exception as e:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–º—É –∞–¥–º–∏–Ω—É {admin_id}: {e}")
        
        try:
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await update.message.reply_text(
                "üéâ *–ü–û–¢–†–Ø–°–ê–Æ–©–ï! –ó–ê–Ø–í–ö–ê –ü–†–ò–ù–Ø–¢–ê!* üéâ\n\n"
                "‚ú® *–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:* ‚ú®\n"
                f"üåü **–ò–º—è:** {name}\n"
                f"üì± **–¢–µ–ª–µ—Ñ–æ–Ω:** {phone_formatted}\n\n"
                "üöÄ *–ß—Ç–æ –¥–∞–ª—å—à–µ?*\n"
                "üí´ –ù–∞—à —Å—É–ø–µ—Ä-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —É–∂–µ –º—á–∏—Ç—Å—è –∫ —Ç–µ–ª–µ—Ñ–æ–Ω—É!\n"
                "üî• –°–∫–æ—Ä–æ –ø–æ–ª—É—á–∏—Ç–µ –∑–≤–æ–Ω–æ–∫ —Å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º!\n"
                "üíé –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º!\n\n"
                "üåà –•–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω—É –∑–∞—è–≤–∫—É? –ñ–º–∏—Ç–µ /start! üåà\n"
                "‚ú® –ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å! ‚ú®",
                parse_mode='Markdown'
            )
            logger.info(f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            
            # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            del user_data[user_id]
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {e}")
            try:
                await update.message.reply_text(
                    "üÜò –£–ø—Å! –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∑–∞–º–∏–Ω–∫–∞! üÜò\n"
                    "üîß –ù–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã —É–∂–µ —á–∏–Ω—è—Ç —ç—Ç–æ!\n"
                    "üí´ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç–∫—É –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É! üí´\n"
                    "üåü –ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∞–º –ø–æ–º–æ–∂–µ–º! üåü"
                )
            except Exception as e2:
                logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ: {e2}")

def clean_phone(phone_str):
    """–û—á–∏—Å—Ç–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤"""
    return re.sub(r'[^\d+]', '', phone_str)

def is_valid_phone(phone):
    """–í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    # –†–æ—Å—Å–∏–π—Å–∫–∏–µ –Ω–æ–º–µ—Ä–∞: 7XXXXXXXXXX, 8XXXXXXXXXX, –∏–ª–∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ +XXXXXXXXXXXXX
    patterns = [
        r'^\+?7\d{10}$',  # +7XXXXXXXXXX –∏–ª–∏ 7XXXXXXXXXX
        r'^8\d{10}$',     # 8XXXXXXXXXX 
        r'^\d{10}$',      # XXXXXXXXXX (–±—É–¥–µ—Ç +7)
        r'^\+\d{7,15}$'   # –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ +XXXXXXXXXXXXX
    ]
    
    for pattern in patterns:
        if re.match(pattern, phone):
            return True
    return False

def format_phone(phone):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    # –£–±–∏—Ä–∞–µ–º –≤—Å–µ –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä –∏ +
    clean = re.sub(r'[^\d+]', '', phone)
    
    # –†–æ—Å—Å–∏–π—Å–∫–∏–µ –Ω–æ–º–µ—Ä–∞
    if clean.startswith('8') and len(clean) == 11:
        return '+7' + clean[1:]
    elif clean.startswith('7') and len(clean) == 11:
        return '+' + clean
    elif clean.startswith('+7') and len(clean) == 12:
        return clean
    elif len(clean) == 10:  # –ù–æ–º–µ—Ä –±–µ–∑ –∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω—ã
        return '+7' + clean
    elif clean.startswith('+'):
        return clean
    else:
        return '+' + clean

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    chat_id = update.effective_chat.id
    user_id = update.effective_user.id
    
    logger.info(f"‚ÑπÔ∏è –ö–æ–º–∞–Ω–¥–∞ /help –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    help_text = f"""
üîß *–ü–û–ú–û–©–¨ –ü–û –ë–û–¢–£ FORMACONTACT* üîß

üöÄ *–ö–æ–º–∞–Ω–¥—ã:*
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

üÜî *–í–∞—à Chat ID:* `{chat_id}`

üìã *–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:*
1. –ù–∞–∂–º–∏—Ç–µ /start
2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"
3. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è
4. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
5. –ì–æ—Ç–æ–≤–æ! –ñ–¥–∏—Ç–µ –∑–≤–æ–Ω–∫–∞!

üìû *–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤:*
üá∑üá∫ –†–æ—Å—Å–∏—è: +7, 8, 7
üåç –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ: +–∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã

üí¨ *–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É*
    """
    
    try:
        await update.message.reply_text(help_text, parse_mode='Markdown')
        logger.info(f"‚úÖ –°–ø—Ä–∞–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ø—Ä–∞–≤–∫–∏: {e}")

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    logger.info("üéâ Telegram –±–æ—Ç FormaContact —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è! üéâ")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler_func)
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CallbackQueryHandler(button_handler))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))
    
    logger.info("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    logger.info(f"üÜî –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∞–¥–º–∏–Ω —á–∞—Ç—ã: {list(admin_chat_ids)}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç
    try:
        application.run_polling(allowed_updates=Update.ALL_TYPES)
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        error_logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {traceback.format_exc()}")
        raise

if __name__ == '__main__':
    main()